{"ast":null,"code":"import _asyncToGenerator from\"/Users/fernandoibraim/Desktop/ZTM Node Course/08 - NASA/05 - Altomating NPM/NasaProject/cliente/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/fernandoibraim/Desktop/ZTM Node Course/08 - NASA/05 - Altomating NPM/NasaProject/cliente/node_modules/@babel/runtime/regenerator/index.js\";var API_URL='http://localhost:8000';function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,fetchedLauches;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:response=_context2.sent;fetchedLauches=response.json();return _context2.abrupt(\"return\",fetchedLauches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:\"post\",body:JSON.stringify(launch),header:{\"Content-Type\":\"application/json\"}});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:case\"end\":return _context4.stop();}}},_callee4);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/Users/fernandoibraim/Desktop/ZTM Node Course/08 - NASA/05 - Altomating NPM/NasaProject/cliente/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchedLauches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","body","JSON","stringify","header","ok","httpAbortLaunch","id"],"mappings":"6WAAA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,C,QAEeC,CAAAA,c,oJAAf,sKACyBC,CAAAA,KAAK,WAAIF,OAAJ,aAD9B,QACQG,QADR,qCAEeA,CAAAA,QAAQ,CAACC,IAAT,EAFf,6G,yDAKeC,CAAAA,e,uJAAf,2LACyBH,CAAAA,KAAK,WAAIF,OAAJ,cAD9B,QACQG,QADR,gBAEQG,cAFR,CAE0BH,QAAQ,CAACC,IAAT,EAF1B,kCAGSE,cAAc,CAACC,IAAf,CAAoB,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAACE,YAAF,CAAkBD,CAAC,CAACC,YAA/B,EAApB,CAHT,0D,0DAMeC,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,8JAEiBV,CAAAA,KAAK,WAAIF,OAAJ,cAAwB,CACxCa,MAAM,CAAE,MADgC,CAExCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFkC,CAGxCK,MAAM,CAAE,CACN,eAAgB,kBADV,CAHgC,CAAxB,CAFtB,qJAUW,CACLC,EAAE,CAAC,KADE,CAVX,uE,2DAiBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,uK,kDAKA,OACEnB,cADF,CAEEI,eAFF,CAGEM,gBAHF,CAIEQ,eAJF","sourcesContent":["const API_URL = 'http://localhost:8000' \n\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n}\n\nasync function httpGetLaunches() { \n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLauches =  response.json();\n  return fetchedLauches.sort((a ,b) =>  a.flightNumber -  b.flightNumber);\n}\n\nasync function httpSubmitLaunch(launch) {\n  try{\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      body: JSON.stringify(launch),\n      header: {\n        \"Content-Type\": \"application/json\",\n      }\n    });\n  }catch(error){\n    return {\n      ok:false,\n    }\n  }\n\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}